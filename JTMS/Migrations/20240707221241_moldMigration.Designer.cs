// <auto-generated />
using System;
using JTMS.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace JTMS.Migrations
{
    [DbContext(typeof(JTMSContext))]
    [Migration("20240707221241_moldMigration")]
    partial class moldMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("JTMS.Models.CompanyModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<int>("NumberOfJobs")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("JTMS.Models.MoldModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Cut")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("MainMoldId")
                        .HasColumnType("char(36)");

                    b.Property<int>("MoldAmount")
                        .HasColumnType("int");

                    b.Property<string>("MoldCode")
                        .HasColumnType("longtext");

                    b.Property<string>("MoldCut")
                        .HasColumnType("longtext");

                    b.Property<string>("MoldInfo")
                        .HasColumnType("longtext");

                    b.Property<string>("MoldPhoto")
                        .HasColumnType("longtext");

                    b.Property<string>("MoldSize")
                        .HasColumnType("longtext");

                    b.Property<string>("Paint")
                        .HasColumnType("longtext");

                    b.Property<string>("PalletID")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool?>("Process1Complete")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("Process2Complete")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("Process3Complete")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("ProcessCompleteCount")
                        .HasColumnType("int");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("MoldModel");
                });

            modelBuilder.Entity("JTMS.Models.PalletModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("IsFilled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("MoldCodes")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("Pallets");
                });

            modelBuilder.Entity("JTMS.Models.ProgressReportModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("MoldCode")
                        .HasColumnType("longtext");

                    b.Property<string>("MoldProcess")
                        .HasColumnType("longtext");

                    b.Property<DateOnly>("ProcessDate")
                        .HasColumnType("date");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("ProgressReports");
                });

            modelBuilder.Entity("JTMS.Models.ProjectModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Address")
                        .HasColumnType("longtext");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("char(36)");

                    b.Property<string>("JobColor")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("JobDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("JobName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("JTMS.Models.MoldModel", b =>
                {
                    b.HasOne("JTMS.Models.ProjectModel", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("JTMS.Models.PalletModel", b =>
                {
                    b.HasOne("JTMS.Models.ProjectModel", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("JTMS.Models.ProgressReportModel", b =>
                {
                    b.HasOne("JTMS.Models.ProjectModel", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("JTMS.Models.ProjectModel", b =>
                {
                    b.HasOne("JTMS.Models.CompanyModel", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });
#pragma warning restore 612, 618
        }
    }
}
